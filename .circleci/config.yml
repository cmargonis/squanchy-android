version: 2.1

executors:
  android:
    working_directory: ~/squanchy
    docker:
      - image: circleci/android:api-28
    environment:
      ANDROID_HOME: /opt/android/sdk
      APPLICATION_ID: net.squanchy.example
      FABRIC_API_KEY: 0000000000000000000000000000000000000000
      ALGOLIA_APPLICATION_ID: ABCDEFGH12
      ALGOLIA_API_KEY: 00000000000000000000000000000000
      ALGOLIA_INDICES_PREFIX: squanchy_dev

commands:
  # Build Tools cache commands
  restore_build_tools_cache:
    steps:
      - restore_cache:
          name: Restore Android build tools cache
          keys:
            - v3-build-tools-{{ checksum "workspace/repo/.circleci/config.yml" }}-{{ checksum "workspace/repo/gradle.properties" }}-{{ checksum "workspace/repo/dependencies.gradle" }}
  save_build_tools_cache:
    steps:
      - save_cache:
          name: Save Android build tools cache
          paths:
            - /opt/android/sdk/build-tools
          key: v3-build-tools-{{ checksum "workspace/repo/.circleci/config.yml" }}-{{ checksum "workspace/repo/gradle.properties" }}-{{ checksum "workspace/repo/dependencies.gradle" }}

  # Gradle cache commands
  restore_gradle_cache:
    steps:
      - restore_cache:
          name: Restore Gradle dependencies cache
          keys:
            - v1-gradle-dependencies-{{ checksum "workspace/repo/.circleci/config.yml" }}-{{ checksum "workspace/repo/gradle.properties" }}-{{ checksum "workspace/repo/dependencies.gradle" }}
      - restore_cache:
          name: Restore Gradle wrapper cache
          keys:
            - v1-gradle-wrapper-{{ checksum "workspace/repo/.circleci/config.yml" }}-{{ checksum "workspace/repo/gradle/wrapper/gradle-wrapper.properties" }}
  save_gradle_cache:
    steps:
      - save_cache:
          name: Save Gradle dependencies cache
          paths:
            - ~/.gradle/caches
          key: v1-gradle-dependencies-{{ checksum "workspace/repo/.circleci/config.yml" }}-{{ checksum "workspace/repo/gradle.properties" }}-{{ checksum "workspace/repo/dependencies.gradle" }}
      - save_cache:
          name: Save Gradle wrapper cache
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "workspace/repo/.circleci/config.yml" }}-{{ checksum "workspace/repo/gradle/wrapper/gradle-wrapper.properties" }}

  # Android Gradle build cache commands
  restore_android_build_cache:
    steps:
      - restore_cache:
          name: Restore Android Gradle build cache
          keys:
            - v3-build-cache-{{ checksum "workspace/repo/.circleci/config.yml" }}-{{ checksum "workspace/repo/gradle.properties" }}-{{ checksum "workspace/repo/dependencies.gradle" }}
  save_android_build_cache:
    steps:
      - save_cache:
          name: Save Android Gradle build cache
          paths:
            - ~/.android/build-cache
          key: v3-build-cache-{{ checksum "workspace/repo/.circleci/config.yml" }}-{{ checksum "workspace/repo/gradle.properties" }}-{{ checksum "workspace/repo/dependencies.gradle" }}

  ensure_android_sdk_is_ready:
    steps:
      - run:
          name: Ensure Android SDK install is up-to-date
          command: workspace/repo/.circleci/ci-scripts/ensure-sdkmanager.sh

  download_gradle_dependencies:
    steps:
      - run:
          name: Download Gradle dependencies
          command: cd workspace/repo/ && ./gradlew downloadDependencies

  restore_workspace:
    steps:
      - attach_workspace:
          at: workspace

jobs:
  checkout:
    executor: android
    steps:
      - checkout:
          path: workspace/repo

      # Prepare the container for the build
      - ensure_android_sdk_is_ready
      - run:
          name: Create mock Play Services JSON
          command: workspace/repo/.circleci/ci-scripts/ci-mock-google-services-setup.sh

      # Persist repo code
      - persist_to_workspace:
          root: workspace
          paths:
            - repo

  prepare_for_checks:
    executor: android
    steps:
      - restore_workspace
      - restore_gradle_cache
      - restore_android_build_cache
      - restore_build_tools_cache

      - download_gradle_dependencies

      - save_android_build_cache
      - save_gradle_cache
      - save_build_tools_cache

      # Persist built app code
      - persist_to_workspace:
          root: workspace
          paths:
            - repo/app/build

  static_analysis:
    executor: android
    steps:
      - restore_workspace
      - restore_gradle_cache
      - restore_android_build_cache
      - restore_build_tools_cache

      # See https://issuetracker.google.com/issues/62217354 for the parallelism option
      - run:
          name: Run static analysis
          command: cd workspace/repo && ./gradlew lintRelease detekt ktlintCheck -Djava.util.concurrent.ForkJoinPool.common.parallelism=2

      # Collect static analysis reports as build artifacts
      - store_artifacts:
          path: workspace/repo/app/build/reports
          destination: reports

  tests:
    executor: android
    steps:
      - restore_workspace
      - restore_gradle_cache
      - restore_android_build_cache
      - restore_build_tools_cache

      # See https://issuetracker.google.com/issues/62217354 for the parallelism option
      - run:
          name: Run unit tests
          command: cd workspace/repo && ./gradlew testRelease -Djava.util.concurrent.ForkJoinPool.common.parallelism=2

      # Collect JUnit test results
      - store_test_results:
          path: workspace/repo/app/build/test-results

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout
      - prepare_for_checks:
          requires:
            - checkout
      - static_analysis:
          requires:
            - prepare_for_checks
      - tests:
          requires:
            - prepare_for_checks
